<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    
    <title>Keith J. Grant</title>
    
    <link>http://keithjgrant.com/index.xml</link>
    <description>Recent content in Keith J. Grant on Keith J. Grant</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Mar 2017 19:35:22 +0000</lastBuildDate>
    <link rel="hub"  href="https://keithjgrant.superfeedr.com/" xmlns="http://www.w3.org/2005/Atom" />
    <link rel="self" href="http://keithjgrant.com/index.xml" xmlns="http://www.w3.org/2005/Atom" />
    
    <item>
      <title></title>
      <link>http://keithjgrant.com/likes/2017/03/70522/</link>
      <pubDate>Wed, 29 Mar 2017 19:35:22 +0000</pubDate>
      
      <guid>http://keithjgrant.com/likes/2017/03/70522/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://keithjgrant.com/notes/2017/03/65012/</link>
      <pubDate>Wed, 29 Mar 2017 18:03:32 +0000</pubDate>
      
      <guid>http://keithjgrant.com/notes/2017/03/65012/</guid>
      <description>&lt;p&gt;I get that &lt;a href=&#34;https://medium.com/@isaaclyman/8-css-gotchas-to-start-your-morning-off-right-c5daade0731d&#34;&gt;this is satire&lt;/a&gt;. I‚Äôm fine with satire, in general. But the fact that this particular satire resonates with so many people indicates to me that one of the following is true:&lt;/p&gt;

&lt;p&gt;1) We have royally screwed up the teaching of CSS.
2) Web devs are terrible at taking the time to learn how CSS works.&lt;/p&gt;

&lt;p&gt;It‚Äôs probably both. And yes, some of the earlier stuff is not immediately intuitive: floats, vertical-align, etc. But it is understandable. You can make sense of this stuff.&lt;/p&gt;

&lt;p&gt;It‚Äôs hard to see devs throwing their hands up in the air‚Ä¶ If this stuff is discouraging to you, please take some time to read up on it. Stop trying to hack through the brush alone. There are great resources available (p.s. I‚Äôm writing one!)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://keithjgrant.com/replies/2017/03/63999/</link>
      <pubDate>Wed, 29 Mar 2017 17:46:39 +0000</pubDate>
      
      <guid>http://keithjgrant.com/replies/2017/03/63999/</guid>
      <description>&lt;p&gt;I love that this appeared in my timeline immediately following my own tweet storm üò£&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://keithjgrant.com/likes/2017/03/60144/</link>
      <pubDate>Wed, 29 Mar 2017 16:42:24 +0000</pubDate>
      
      <guid>http://keithjgrant.com/likes/2017/03/60144/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://keithjgrant.com/notes/2017/03/61587/</link>
      <pubDate>Tue, 28 Mar 2017 17:06:27 +0000</pubDate>
      
      <guid>http://keithjgrant.com/notes/2017/03/61587/</guid>
      <description>&lt;p&gt;I‚Äôm ready to stop yelling about this crap and start having productive discussions. This is a good starting place üëç&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/jdan/status/846755231325151232&#34;&gt;https://twitter.com/jdan/status/846755231325151232&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://keithjgrant.com/likes/2017/03/61233/</link>
      <pubDate>Tue, 28 Mar 2017 17:00:33 +0000</pubDate>
      
      <guid>http://keithjgrant.com/likes/2017/03/61233/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://keithjgrant.com/likes/2017/03/49514/</link>
      <pubDate>Tue, 28 Mar 2017 13:45:14 +0000</pubDate>
      
      <guid>http://keithjgrant.com/likes/2017/03/49514/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://keithjgrant.com/likes/2017/03/48093/</link>
      <pubDate>Mon, 27 Mar 2017 13:21:33 +0000</pubDate>
      
      <guid>http://keithjgrant.com/likes/2017/03/48093/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CSS is Not Broken</title>
      <link>http://keithjgrant.com/posts/2017/03/css-is-not-broken/</link>
      <pubDate>Fri, 24 Mar 2017 14:15:34 -0400</pubDate>
      
      <guid>http://keithjgrant.com/posts/2017/03/css-is-not-broken/</guid>
      <description>&lt;p&gt;Coding in any language is hard before you spend time mastering it. Imagine what your JavaScript would look like if you never took the time to learn about OOP or functional programming principles? Just because you &lt;em&gt;expect&lt;/em&gt; CSS to be easy, doesn‚Äôt mean the language is broken when you find it is not.&lt;/p&gt;

&lt;p&gt;A lot of people have &lt;a href=&#34;https://simpleprogrammer.com/2013/05/06/why-javascript-is-doomed/&#34;&gt;gone on about&lt;/a&gt; &lt;a href=&#34;https://medium.com/smalltalk-talk/the-three-worst-programming-languages-b1ec25a232c1#e848&#34;&gt;how horrible JavaScript is&lt;/a&gt;. JavaScript is not horrible. It is an incredible language. It has a few odd quirks, just as CSS does. But if you take the time to actually understand these quirks, you will reap huge reward.&lt;/p&gt;

&lt;p&gt;You cannot be proficient in JavaScript until you understand coercion, prototypal inheritance, and asyncronous flow control. Likewise, in CSS, you have to understand the cascade, inheritance, and the box model. Once you have those down, take a deeper look at the various layout methods. Do you know what stacking contexts and block formatting contexts are? Do you know why setting a height on an element leads to problems and how to accomplish what you need without doing so?&lt;/p&gt;

&lt;p&gt;CSS is hard. But this is not because the language is faulty. Rather, the difficulty lies in what the language seeks to accomplish. I‚Äôve heard many developers say they wish they could ‚Äúthrow out CSS and start over with something better.‚Äù I think this betrays a fundamental misunderstanding of the purpose of the language:&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;When you code CSS, you‚Äôre writing abstract rules to take &lt;em&gt;unknown&lt;/em&gt; content and organize it in an &lt;em&gt;unknown&lt;/em&gt; medium. That shit is hard.&lt;/p&gt;&amp;mdash; keith‚Ä¢j‚Ä¢grant (@keithjgrant) &lt;a href=&#34;https://twitter.com/keithjgrant/status/842728744653676544&#34;&gt;March 17, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Furthermore, CSS isn‚Äôt just code, it‚Äôs also part of the design. A &lt;a href=&#34;https://snook.ca/archives/html_and_css/css-concerns&#34;&gt;vital concern of CSS is consistency&lt;/a&gt;. You should want ‚Äúglobal‚Äù styles: colors and spacing should be consistent throughout your application. Similar components need to look similar. Your buttons should all be consistently sized and your box shadows or border radiuses should not be ad-hoc.&lt;/p&gt;

&lt;p&gt;I find it ironic that developers who bemoan the ‚Äúglobal‚Äù nature of CSS are usually the ones who run into specificity problems because they unnecessarily scope their styles to particular parts of a particular page. When you have selectors like &lt;code&gt;#directory .sorted .sidebar :nth-child(2) button&lt;/code&gt;, your problem isn‚Äôt that CSS is global. Your CSS isn‚Äôt global enough!&lt;/p&gt;

&lt;p&gt;The next thing you know, you find yourself using &lt;code&gt;!important&lt;/code&gt; to correct specificity problems. This is a red flag that you need to stop and learn the cascade. You can use &lt;code&gt;!important&lt;/code&gt; to sweep specificity problems under the rug once. But you will soon need it a second time, at which point you will face the same specificity problem all over again.&lt;/p&gt;

&lt;p&gt;Design your styles so they can be reused, anywhere in the app. Learn SMACSS and BEM. And don‚Äôt stop because you understand the ‚Äúnaming system‚Äù&amp;mdash;these methodologies are about far more than double-underscores and double-hyphens. They are about code organization, reuse, and refactoring. They are the solution to dead code elimination. They offer ways to utilize the cascade instead of fearing it. They allow you to know precisely where in your code you can find a certain set of styles.&lt;/p&gt;

&lt;p&gt;CSS isn‚Äôt broken. But it does require &lt;a href=&#34;https://www.manning.com/books/css-in-depth&#34;&gt;study and skill&lt;/a&gt;. It does require careful thought. As with anything in programming, you can make a mess of the code. Sure, blaming the language is the easy way out. But when your JavaScript is confusing and buggy, you know it‚Äôs not the language‚Äôs fault.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://keithjgrant.com/notes/2017/03/73954/</link>
      <pubDate>Mon, 20 Mar 2017 20:32:34 +0000</pubDate>
      
      <guid>http://keithjgrant.com/notes/2017/03/73954/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
